{"version":3,"file":"ngafr-authentication.js","sources":["ng://ngafr-authentication/lib/ngafr-authentication.service.ts","ng://ngafr-authentication/lib/ngafr-authentication.component.ts","ng://ngafr-authentication/lib/ngafr-authentication.directive.ts","ng://ngafr-authentication/lib/ngafr-firebase-config.service.ts","ng://ngafr-authentication/lib/ngafr-authentication.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FirebaseUISignInSuccessWithAuthResult, FirebaseUISignInFailure } from 'firebaseui-angular';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { of, Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgafrAuthenticationService {\r\n  private _loggedIn = false;\r\n  loggedIn: BehaviorSubject<boolean> = new BehaviorSubject(this._loggedIn);\r\n  private _user: firebase.User = null;\r\n  user: BehaviorSubject<firebase.User> = new BehaviorSubject(this._user);\r\n  hideLogOutButton$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n  ) { }\r\n  isUserLoggedIn(): Observable<void | firebase.User> {\r\n      return this.afAuth.authState.pipe(map((fBaseUser: firebase.User) => {\r\n        console.log('User: ', (fBaseUser && fBaseUser.email) ? fBaseUser.displayName : 'Guest');\r\n        this._loggedIn = (!!fBaseUser && !!fBaseUser.email);\r\n        this._user = fBaseUser;\r\n        if (this.loggedIn.value !== this._loggedIn)\r\n          this.loggedIn.next(this._loggedIn);\r\n        this.user.next(fBaseUser);\r\n        return fBaseUser;\r\n      }),\r\n        catchError((e) => of(console.log('exception:', e))\r\n      ));\r\n  }\r\n  logout() {\r\n    this.loggedIn.next(false);\r\n    this.afAuth.signOut();\r\n  }\r\n  hideLogOutButton(hide: boolean) {\r\n    this.hideLogOutButton$.next(hide);\r\n  }\r\n\r\n  loginSuccessCallback(data: FirebaseUISignInSuccessWithAuthResult) {\r\n    // console.log('successCallback', data);\r\n    this._loggedIn = true;\r\n    // this.router.navigate(['page']);\r\n  }\r\n\r\n  loginErrorCallback(data: FirebaseUISignInFailure) {\r\n    // console.warn('errorCallback', data);\r\n    this._loggedIn = false;\r\n  }\r\n  // isUserLoggedIn(): boolean {\r\n  //   return this.loggedIn;\r\n  // }\r\n}\r\n","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { NgafrAuthenticationService } from './ngafr-authentication.service';\r\n\r\n@Component({\r\n  selector: 'lib-ngafr-authentication',\r\n  template: `\r\n    <ng-template #ngafrAuthElement>\r\n      <firebase-ui (signInSuccessWithAuthResult)=\"this.ngafrAuth.loginSuccessCallback($event)\"\r\n                   (signInFailure)=\"this.ngafrAuth.loginErrorCallback($event)\"></firebase-ui>\r\n      <button *ngIf=\"loggedIn && !hideLogOutButton\" (click)=\"this.ngafrAuth.logout()\">Logout1</button>\r\n    </ng-template>\r\n  `,\r\n  styleUrls: [\r\n    './ngafr-authentication.component.css',\r\n    '../../../../node_modules/firebaseui/dist/firebaseui.css'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class NgafrAuthenticationComponent {\r\n  @ViewChild('ngafrAuthElement', { static: true }) ngafrAuthElement: TemplateRef<any>;\r\n  public loggedIn = false;\r\n  public hideLogOutButton = false;\r\n  constructor(\r\n    public ngafrAuth: NgafrAuthenticationService,\r\n    private cdr: ChangeDetectorRef) {\r\n    this.ngafrAuth.isUserLoggedIn().subscribe(user => {\r\n      if (user) {\r\n        this.loggedIn = true;\r\n      } else {\r\n        this.loggedIn = false;\r\n      }\r\n    });\r\n    this.ngafrAuth.hideLogOutButton$.subscribe(hide => {\r\n      this.hideLogOutButton = hide\r\n      console.log(\" in lib component : hideLogOutButton =\", this.hideLogOutButton);\r\n      \r\n      this.cdr.markForCheck();\r\n    });\r\n    \r\n  }\r\n}\r\n","import { NgafrAuthenticationService } from './ngafr-authentication.service';\r\nimport { Directive, OnInit, ComponentFactoryResolver, ViewContainerRef, ChangeDetectorRef, EventEmitter, Output, Input, ElementRef, HostListener, AfterViewInit } from '@angular/core';\r\nimport { NgafrAuthenticationComponent } from './ngafr-authentication.component';\r\nimport { of } from 'rxjs';\r\n\r\n\r\n@Directive({\r\n    selector: '[ngafrAuth]',\r\n    exportAs: 'ngafrAuth'\r\n})\r\nexport class NgafrAuthDirective implements OnInit,  AfterViewInit {\r\n    @Input('ngafrAuth') ngafrAuth : string; \r\n    @Input('userLogOut') userLogOut : string; \r\n    @Input('hideDefaultLogOutButton') hideDefaultLogOutButton : string = 'false'; \r\n    @Output('userLoggedInEvent') userLoggedInEvent = new EventEmitter<{ isLoggedIn: boolean }>();\r\n    @Output('userEvent') userEvent = new EventEmitter<{ user: firebase.User }>();\r\n    private authTemplateComponent: NgafrAuthenticationComponent;\r\n\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private viewContainer: ViewContainerRef,\r\n        private cdr: ChangeDetectorRef,\r\n        private auth: NgafrAuthenticationService,\r\n        private el: ElementRef\r\n    ) { \r\n        this.auth.loggedIn.subscribe(isLoggedIn => this.userLoggedInEvent.emit({ isLoggedIn: isLoggedIn }));\r\n        this.auth.user.subscribe(user => this.userEvent.emit({ user: user }));\r\n\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.auth.hideLogOutButton(JSON.parse(this.hideDefaultLogOutButton));\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(NgafrAuthenticationComponent);\r\n        const componentRef = componentFactory.create(this.viewContainer.injector);\r\n        this.authTemplateComponent = componentRef.instance;\r\n        this.viewContainer.createEmbeddedView(this.authTemplateComponent.ngafrAuthElement);\r\n        this.cdr.markForCheck();\r\n    }\r\n\r\n    logout() {\r\n        this.auth.logout();\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { IFirebaseAuthProviders } from './ngafr-firebase-config.model';\r\nimport * as firebase from 'firebase';\r\nimport * as firebaseui from 'firebaseui';\r\n\r\n@Injectable()\r\nexport class FirebaseConfigService {\r\n\r\n  static firebaseUiAuthConfig: firebaseui.auth.Config = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [],\r\n    // tosUrl: '<your-tos-link>',\r\n    // privacyPolicyUrl: '<your-privacyPolicyUrl-link>',\r\n    credentialHelper: firebaseui.auth.CredentialHelper.NONE\r\n  };\r\n\r\n  static getFirebaseUiAuthConfig(authProviders: IFirebaseAuthProviders) {\r\n    if (authProviders.googleAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.auth.GoogleAuthProvider.PROVIDER_ID);\r\n    }\r\n    if (authProviders.facebookAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push({\r\n          scopes: [\r\n            'public_profile',\r\n            'email',\r\n            'user_likes',\r\n            'user_friends'\r\n          ],\r\n          customParameters: {\r\n            auth_type: 'reauthenticate'\r\n          },\r\n          provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n        });\r\n     }\r\n    if (authProviders.emailAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push({\r\n        requireDisplayName: true,\r\n        provider: firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n      });\r\n    }\r\n    if (authProviders.twitterAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.auth.TwitterAuthProvider.PROVIDER_ID);\r\n     }\r\n    if (authProviders.githubAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.auth.GithubAuthProvider.PROVIDER_ID);\r\n     }\r\n    if (authProviders.phoneAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.auth.PhoneAuthProvider.PROVIDER_ID);\r\n     }\r\n    if (authProviders.anonymousAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID);\r\n     }\r\n    return FirebaseConfigService.firebaseUiAuthConfig;\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule, InjectionToken, ModuleWithProviders } from '@angular/core';\r\nimport { FirebaseUIModule } from 'firebaseui-angular';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { IFirebaseConf, IFirebaseAuthProviders } from './ngafr-firebase-config.model';\r\nimport { FirebaseConfigService } from './ngafr-firebase-config.service';\r\nimport { NgafrAuthDirective } from './ngafr-authentication.directive';\r\nimport { NgafrAuthenticationComponent } from './ngafr-authentication.component';\r\n\r\nexport const FirebaseConfigData = new InjectionToken<IFirebaseConf>('FIREBASECONF');\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgafrAuthDirective, NgafrAuthenticationComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AngularFireAuthModule,\r\n    FirebaseUIModule\r\n  ],\r\n  exports: [NgafrAuthDirective, NgafrAuthenticationComponent],\r\n  providers: [FirebaseConfigService],\r\n  entryComponents: [NgafrAuthenticationComponent]\r\n})\r\n\r\nexport class NgafrAuthenticationModule {\r\n  public static forRoot(firebaseConfig: IFirebaseConf, authProviders: IFirebaseAuthProviders): ModuleWithProviders {\r\n    const firebaseUiAuthConfig = FirebaseConfigService.getFirebaseUiAuthConfig(authProviders);\r\n    return {\r\n      ngModule: NgafrAuthenticationModule,\r\n      providers: [\r\n        FirebaseConfigService,\r\n        AngularFireModule.initializeApp(firebaseConfig).providers,\r\n        {provide: FirebaseConfigData, useValue: firebaseConfig},\r\n        FirebaseUIModule.forRoot(firebaseUiAuthConfig).providers\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n\r\n"],"names":["firebase.auth","firebaseui.auth"],"mappings":"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"}