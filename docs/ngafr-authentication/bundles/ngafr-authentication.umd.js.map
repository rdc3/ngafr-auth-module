{"version":3,"file":"ngafr-authentication.umd.js","sources":["../../../projects/ngafr-authentication/src/lib/ngafr-authentication.service.ts","../../../projects/ngafr-authentication/src/lib/ngafr-authentication.component.ts","../../../projects/ngafr-authentication/src/lib/ngafr-authentication.directive.ts","../../../projects/ngafr-authentication/src/lib/ngafr-firebase-config.service.ts","../../../projects/ngafr-authentication/src/lib/ngafr-authentication.module.ts","../../../projects/ngafr-authentication/src/public-api.ts","../../../projects/ngafr-authentication/src/ngafr-authentication.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FirebaseUISignInSuccessWithAuthResult, FirebaseUISignInFailure } from 'firebaseui-angular';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { of, Observable, BehaviorSubject } from 'rxjs';\r\nimport { User } from '@firebase/auth-types';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgafrAuthenticationService {\r\n  private _loggedIn = false;\r\n  loggedIn: BehaviorSubject<boolean> = new BehaviorSubject(this._loggedIn);\r\n  private _user: User = null;\r\n  user: BehaviorSubject<User> = new BehaviorSubject(this._user);\r\n  hideLogOutButton$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n  ) { }\r\n  isUserLoggedIn(): Observable<void | User> {\r\n      return this.afAuth.authState.pipe(map((fBaseUser: User) => {\r\n        console.log('User: ', (fBaseUser && fBaseUser.email) ? fBaseUser.displayName : 'Guest');\r\n        this._loggedIn = (!!fBaseUser && !!fBaseUser.email);\r\n        this._user = fBaseUser;\r\n        if (this.loggedIn.value !== this._loggedIn)\r\n          this.loggedIn.next(this._loggedIn);\r\n        this.user.next(fBaseUser);\r\n        return fBaseUser;\r\n      }),\r\n        catchError((e) => of(console.log('exception:', e))\r\n      ));\r\n  }\r\n  logout() {\r\n    this.loggedIn.next(false);\r\n    this.afAuth.signOut();\r\n  }\r\n  hideLogOutButton(hide: boolean) {\r\n    this.hideLogOutButton$.next(hide);\r\n  }\r\n\r\n  loginSuccessCallback(data: FirebaseUISignInSuccessWithAuthResult) {\r\n    // console.log('successCallback', data);\r\n    this._loggedIn = true;\r\n    // this.router.navigate(['page']);\r\n  }\r\n\r\n  loginErrorCallback(data: FirebaseUISignInFailure) {\r\n    // console.warn('errorCallback', data);\r\n    this._loggedIn = false;\r\n  }\r\n  // isUserLoggedIn(): boolean {\r\n  //   return this.loggedIn;\r\n  // }\r\n}\r\n","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { NgafrAuthenticationService } from './ngafr-authentication.service';\r\n\r\n@Component({\r\n  selector: 'lib-ngafr-authentication',\r\n  template: `\r\n    <ng-template #ngafrAuthElement>\r\n      <firebase-ui (signInSuccessWithAuthResult)=\"this.ngafrAuth.loginSuccessCallback($event)\"\r\n                   (signInFailure)=\"this.ngafrAuth.loginErrorCallback($event)\"></firebase-ui>\r\n      <button *ngIf=\"loggedIn && !hideLogOutButton\" (click)=\"this.ngafrAuth.logout()\">Logout1</button>\r\n    </ng-template>\r\n  `,\r\n  styleUrls: [\r\n    './ngafr-authentication.component.css',\r\n    '../../../../node_modules/firebaseui/dist/firebaseui.css'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class NgafrAuthenticationComponent {\r\n  @ViewChild('ngafrAuthElement', { static: true }) ngafrAuthElement: TemplateRef<any>;\r\n  public loggedIn = false;\r\n  public hideLogOutButton = false;\r\n  constructor(\r\n    public ngafrAuth: NgafrAuthenticationService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n      console.log('in On Init');\r\n      this.ngafrAuth.isUserLoggedIn().subscribe(user => {\r\n        if (user) {\r\n          this.loggedIn = true;\r\n        } else {\r\n          this.loggedIn = false;\r\n        }\r\n      });\r\n      this.ngafrAuth.hideLogOutButton$.subscribe(hide => {\r\n        this.hideLogOutButton = hide\r\n        this.cdr.markForCheck();\r\n      });\r\n    \r\n  }\r\n}\r\n","import { NgafrAuthenticationService } from './ngafr-authentication.service';\r\nimport {\r\n    Directive, ComponentFactoryResolver, ViewContainerRef, ChangeDetectorRef,\r\n    EventEmitter, Output, Input\r\n} from '@angular/core';\r\nimport { OnInit, AfterViewInit } from '@angular/core';\r\nimport { NgafrAuthenticationComponent } from './ngafr-authentication.component';\r\nimport { User } from '@firebase/auth-types';\r\n\r\n@Directive({\r\n    selector: '[ngafrAuth]',\r\n    exportAs: 'ngafrAuth'\r\n})\r\nexport class NgafrAuthDirective implements OnInit,  AfterViewInit {\r\n    @Input('ngafrAuth') ngafrAuth : string; \r\n    @Input('userLogOut') userLogOut : string; \r\n    @Input('hideDefaultLogOutButton') hideDefaultLogOutButton : string = 'false'; \r\n    @Output('userLoggedInEvent') userLoggedInEvent = new EventEmitter<{ isLoggedIn: boolean }>();\r\n    @Output('userEvent') userEvent = new EventEmitter<{ user: User }>();\r\n    private authTemplateComponent: NgafrAuthenticationComponent;\r\n\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private viewContainer: ViewContainerRef,\r\n        private cdr: ChangeDetectorRef,\r\n        private auth: NgafrAuthenticationService\r\n    ) { \r\n        this.auth.loggedIn.subscribe(isLoggedIn => this.userLoggedInEvent.emit({ isLoggedIn: isLoggedIn }));\r\n        this.auth.user.subscribe(user => this.userEvent.emit({ user: user }));\r\n\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.auth.hideLogOutButton(JSON.parse(this.hideDefaultLogOutButton));\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(NgafrAuthenticationComponent);\r\n        const componentRef = componentFactory.create(this.viewContainer.injector);\r\n        this.authTemplateComponent = componentRef.instance;\r\n        this.viewContainer.createEmbeddedView(this.authTemplateComponent.ngafrAuthElement);\r\n        this.cdr.markForCheck();\r\n    }\r\n\r\n    logout() {\r\n        this.auth.logout();\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { IFirebaseAuthProviders } from './ngafr-firebase-config.model';\r\nimport * as firebase from 'firebase';\r\nimport * as firebaseui from 'firebaseui';\r\n\r\n@Injectable()\r\nexport class FirebaseConfigService {\r\n\r\n  static firebaseUiAuthConfig: firebaseui.auth.Config = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [],\r\n    // tosUrl: '<your-tos-link>',\r\n    // privacyPolicyUrl: '<your-privacyPolicyUrl-link>',\r\n    credentialHelper: firebaseui.auth.CredentialHelper.NONE\r\n  };\r\n\r\n  static getFirebaseUiAuthConfig(authProviders: IFirebaseAuthProviders) {\r\n    if (authProviders.googleAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.default.auth.GoogleAuthProvider.PROVIDER_ID);\r\n    }\r\n    if (authProviders.facebookAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push({\r\n          scopes: [\r\n            'public_profile',\r\n            'email',\r\n            'user_likes',\r\n            'user_friends'\r\n          ],\r\n          customParameters: {\r\n            auth_type: 'reauthenticate'\r\n          },\r\n          provider: firebase.default.auth.FacebookAuthProvider.PROVIDER_ID\r\n        });\r\n     }\r\n    if (authProviders.emailAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push({\r\n        requireDisplayName: true,\r\n        provider: firebase.default.auth.EmailAuthProvider.PROVIDER_ID\r\n      });\r\n    }\r\n    if (authProviders.twitterAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.default.auth.TwitterAuthProvider.PROVIDER_ID);\r\n     }\r\n    if (authProviders.githubAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.default.auth.GithubAuthProvider.PROVIDER_ID);\r\n     }\r\n    if (authProviders.phoneAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.default.auth.PhoneAuthProvider.PROVIDER_ID);\r\n     }\r\n    if (authProviders.anonymousAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID);\r\n     }\r\n    return FirebaseConfigService.firebaseUiAuthConfig;\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule, InjectionToken, ModuleWithProviders } from '@angular/core';\r\nimport { FirebaseUIModule } from 'firebaseui-angular';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { IFirebaseConf, IFirebaseAuthProviders } from './ngafr-firebase-config.model';\r\nimport { FirebaseConfigService } from './ngafr-firebase-config.service';\r\nimport { NgafrAuthDirective } from './ngafr-authentication.directive';\r\nimport { NgafrAuthenticationComponent } from './ngafr-authentication.component';\r\n\r\nexport const FirebaseConfigData = new InjectionToken<IFirebaseConf>('FIREBASECONF');\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgafrAuthDirective, NgafrAuthenticationComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AngularFireAuthModule,\r\n    FirebaseUIModule\r\n  ],\r\n  exports: [NgafrAuthDirective, NgafrAuthenticationComponent],\r\n  providers: [FirebaseConfigService],\r\n  entryComponents: [NgafrAuthenticationComponent]\r\n})\r\n\r\nexport class NgafrAuthenticationModule {\r\n  public static forRoot(firebaseConfig: IFirebaseConf, authProviders: IFirebaseAuthProviders): ModuleWithProviders<NgafrAuthenticationModule> {\r\n    const firebaseUiAuthConfig = FirebaseConfigService.getFirebaseUiAuthConfig(authProviders);\r\n    return {\r\n      ngModule: NgafrAuthenticationModule,\r\n      providers: [\r\n        FirebaseConfigService,\r\n        AngularFireModule.initializeApp(firebaseConfig).providers,\r\n        {provide: FirebaseConfigData, useValue: firebaseConfig},\r\n        FirebaseUIModule.forRoot(firebaseUiAuthConfig).providers\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Public API Surface of ngafr-authentication\r\n */\r\n\r\nexport * from './lib/ngafr-authentication.directive';\r\nexport * from './lib/ngafr-authentication.module';\r\nexport * from './lib/ngafr-firebase-config.service';\r\nexport * from './lib/ngafr-authentication.service';\r\nexport * from './lib/ngafr-authentication.component';\r\nexport {IFirebaseConf, IFirebaseAuthProviders} from './lib/ngafr-firebase-config.model';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["BehaviorSubject","map","catchError","of","Injectable","AngularFireAuth","Component","ViewEncapsulation","ChangeDetectorRef","ViewChild","EventEmitter","Directive","ComponentFactoryResolver","ViewContainerRef","Input","Output","firebase.default","firebaseui.auth","InjectionToken","AngularFireModule","FirebaseUIModule","NgModule","BrowserModule","FormsModule","AngularFireAuthModule"],"mappings":"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"}