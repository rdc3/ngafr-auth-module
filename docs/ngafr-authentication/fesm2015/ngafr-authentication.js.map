{"version":3,"file":"ngafr-authentication.js","sources":["../../../projects/ngafr-authentication/src/lib/ngafr-authentication.service.ts","../../../projects/ngafr-authentication/src/lib/ngafr-authentication.component.ts","../../../projects/ngafr-authentication/src/lib/ngafr-authentication.directive.ts","../../../projects/ngafr-authentication/src/lib/ngafr-firebase-config.service.ts","../../../projects/ngafr-authentication/src/lib/ngafr-authentication.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { FirebaseUISignInSuccessWithAuthResult, FirebaseUISignInFailure } from 'firebaseui-angular';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { of, Observable, BehaviorSubject } from 'rxjs';\r\nimport { User } from '@firebase/auth-types';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class NgafrAuthenticationService {\r\n  private _loggedIn = false;\r\n  private _user: User = null;\r\n  loggedIn: BehaviorSubject<boolean> = new BehaviorSubject(this._loggedIn);\r\n  user: BehaviorSubject<User> = new BehaviorSubject(this._user);\r\n  hideLogOutButton$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  constructor(private afAuth: AngularFireAuth) { }\r\n\r\n  isUserLoggedIn(): Observable<void | User> {\r\n      return this.afAuth.authState.pipe(map((fBaseUser: User) => {\r\n        console.log('User: ', (fBaseUser && fBaseUser.email) ? fBaseUser.displayName : 'Guest');\r\n        this._loggedIn = (!!fBaseUser && !!fBaseUser.email);\r\n        this._user = fBaseUser;\r\n        if (this.loggedIn.value !== this._loggedIn)\r\n          this.loggedIn.next(this._loggedIn);\r\n        this.user.next(fBaseUser);\r\n        return fBaseUser;\r\n      }),\r\n        catchError((e) => of(console.log('exception:', e))\r\n      ));\r\n  }\r\n\r\n  logout() {\r\n    this.loggedIn.next(false);\r\n    this.afAuth.signOut();\r\n  }\r\n\r\n  hideLogOutButton(hide: boolean) {\r\n    this.hideLogOutButton$.next(hide);\r\n  }\r\n\r\n  loginSuccessCallback(data: FirebaseUISignInSuccessWithAuthResult) {\r\n    this._loggedIn = true;\r\n  }\r\n\r\n  loginErrorCallback(data: FirebaseUISignInFailure) {\r\n    this._loggedIn = false;\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation, ViewChild, TemplateRef, OnInit, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { NgafrAuthenticationService } from './ngafr-authentication.service';\r\n\r\n@Component({\r\n  selector: 'lib-ngafr-authentication',\r\n  template: `\r\n    <ng-template #ngafrAuthElement>\r\n      <firebase-ui (signInSuccessWithAuthResult)=\"this.ngafrAuth.loginSuccessCallback($event)\"\r\n                   (signInFailure)=\"this.ngafrAuth.loginErrorCallback($event)\"></firebase-ui>\r\n      <button *ngIf=\"loggedIn && !hideLogOutButton\" (click)=\"this.ngafrAuth.logout()\">Logout</button>\r\n    </ng-template>\r\n  `,\r\n  styleUrls: [\r\n    '../../../../node_modules/firebaseui/dist/firebaseui.css'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class NgafrAuthenticationComponent {\r\n  @ViewChild('ngafrAuthElement', { static: true }) ngafrAuthElement: TemplateRef<any>;\r\n  public loggedIn = false;\r\n  public hideLogOutButton = false;\r\n  constructor(\r\n    public ngafrAuth: NgafrAuthenticationService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n      console.log('in On Init');\r\n      this.ngafrAuth.isUserLoggedIn().subscribe(user => {\r\n        if (user) {\r\n          this.loggedIn = true;\r\n        } else {\r\n          this.loggedIn = false;\r\n        }\r\n      });\r\n      this.ngafrAuth.hideLogOutButton$.subscribe(hide => {\r\n        this.hideLogOutButton = hide\r\n        this.cdr.markForCheck();\r\n      });\r\n    \r\n  }\r\n}\r\n","import { NgafrAuthenticationService } from './ngafr-authentication.service';\r\nimport {\r\n    Directive, ComponentFactoryResolver, ViewContainerRef, ChangeDetectorRef,\r\n    EventEmitter, Output, Input\r\n} from '@angular/core';\r\nimport { OnInit, AfterViewInit } from '@angular/core';\r\nimport { NgafrAuthenticationComponent } from './ngafr-authentication.component';\r\nimport { User } from '@firebase/auth-types';\r\n\r\n@Directive({\r\n    selector: '[ngafrAuth]',\r\n    exportAs: 'ngafrAuth'\r\n})\r\nexport class NgafrAuthDirective implements OnInit,  AfterViewInit {\r\n    @Input('ngafrAuth') ngafrAuth : string; \r\n    @Input('userLogOut') userLogOut : string; \r\n    @Input('hideDefaultLogOutButton') hideDefaultLogOutButton : string = 'false'; \r\n    @Output('userLoggedInEvent') userLoggedInEvent = new EventEmitter<{ isLoggedIn: boolean }>();\r\n    @Output('userEvent') userEvent = new EventEmitter<{ user: User }>();\r\n    private authTemplateComponent: NgafrAuthenticationComponent;\r\n\r\n    constructor(\r\n        private componentFactoryResolver: ComponentFactoryResolver,\r\n        private viewContainer: ViewContainerRef,\r\n        private cdr: ChangeDetectorRef,\r\n        private auth: NgafrAuthenticationService)\r\n    { \r\n        this.auth.loggedIn.subscribe(isLoggedIn => this.userLoggedInEvent.emit({ isLoggedIn: isLoggedIn }));\r\n        this.auth.user.subscribe(user => this.userEvent.emit({ user: user }));\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.hideDefaultLogOutButton.toLowerCase() !== 'true' || this.hideDefaultLogOutButton.toLowerCase() !== 'false')\r\n            this.hideDefaultLogOutButton = 'false';\r\n        this.auth.hideLogOutButton(JSON.parse(this.hideDefaultLogOutButton));\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(NgafrAuthenticationComponent);\r\n        const componentRef = componentFactory.create(this.viewContainer.injector);\r\n        this.authTemplateComponent = componentRef.instance;\r\n        this.viewContainer.createEmbeddedView(this.authTemplateComponent.ngafrAuthElement);\r\n        this.cdr.markForCheck();\r\n    }\r\n\r\n    logout() {\r\n        this.auth.logout();\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { IFirebaseAuthProviders } from './ngafr-firebase-config.model';\r\nimport * as firebase from 'firebase';\r\nimport * as firebaseui from 'firebaseui';\r\n\r\n@Injectable()\r\nexport class FirebaseConfigService {\r\n\r\n  static firebaseUiAuthConfig: firebaseui.auth.Config = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [],\r\n    // tosUrl: '<your-tos-link>',\r\n    // privacyPolicyUrl: '<your-privacyPolicyUrl-link>',\r\n    credentialHelper: firebaseui.auth.CredentialHelper.NONE\r\n  };\r\n\r\n  static getFirebaseUiAuthConfig(authProviders: IFirebaseAuthProviders) {\r\n    if (authProviders.googleAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.default.auth.GoogleAuthProvider.PROVIDER_ID);\r\n    }\r\n    if (authProviders.facebookAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push({\r\n          scopes: [\r\n            'public_profile',\r\n            'email',\r\n            'user_likes',\r\n            'user_friends'\r\n          ],\r\n          customParameters: {\r\n            auth_type: 'reauthenticate'\r\n          },\r\n          provider: firebase.default.auth.FacebookAuthProvider.PROVIDER_ID\r\n        });\r\n     }\r\n    if (authProviders.emailAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push({\r\n        requireDisplayName: true,\r\n        provider: firebase.default.auth.EmailAuthProvider.PROVIDER_ID\r\n      });\r\n    }\r\n    if (authProviders.twitterAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.default.auth.TwitterAuthProvider.PROVIDER_ID);\r\n     }\r\n    if (authProviders.githubAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.default.auth.GithubAuthProvider.PROVIDER_ID);\r\n     }\r\n    if (authProviders.phoneAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebase.default.auth.PhoneAuthProvider.PROVIDER_ID);\r\n     }\r\n    if (authProviders.anonymousAuthProvider) {\r\n      FirebaseConfigService.firebaseUiAuthConfig.signInOptions.push(firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID);\r\n     }\r\n    return FirebaseConfigService.firebaseUiAuthConfig;\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule, InjectionToken, ModuleWithProviders } from '@angular/core';\r\nimport { FirebaseUIModule } from 'firebaseui-angular';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { IFirebaseConf, IFirebaseAuthProviders } from './ngafr-firebase-config.model';\r\nimport { FirebaseConfigService } from './ngafr-firebase-config.service';\r\nimport { NgafrAuthDirective } from './ngafr-authentication.directive';\r\nimport { NgafrAuthenticationComponent } from './ngafr-authentication.component';\r\n\r\nexport const FirebaseConfigData = new InjectionToken<IFirebaseConf>('FIREBASECONF');\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgafrAuthDirective, NgafrAuthenticationComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AngularFireAuthModule,\r\n    FirebaseUIModule\r\n  ],\r\n  exports: [NgafrAuthDirective, NgafrAuthenticationComponent],\r\n  providers: [FirebaseConfigService],\r\n  entryComponents: [NgafrAuthenticationComponent]\r\n})\r\n\r\nexport class NgafrAuthenticationModule {\r\n  public static forRoot(firebaseConfig: IFirebaseConf, authProviders: IFirebaseAuthProviders): ModuleWithProviders<NgafrAuthenticationModule> {\r\n    const firebaseUiAuthConfig = FirebaseConfigService.getFirebaseUiAuthConfig(authProviders);\r\n    return {\r\n      ngModule: NgafrAuthenticationModule,\r\n      providers: [\r\n        FirebaseConfigService,\r\n        AngularFireModule.initializeApp(firebaseConfig).providers,\r\n        {provide: FirebaseConfigData, useValue: firebaseConfig},\r\n        FirebaseUIModule.forRoot(firebaseUiAuthConfig).providers\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n\r\n"],"names":["firebase.default","firebaseui.auth"],"mappings":";;;;;;;;;;;;;;;;MAWa,0BAA0B;;;;IAOrC,YAAoB,MAAuB;QAAvB,WAAM,GAAN,MAAM,CAAiB;QANnC,cAAS,GAAG,KAAK,CAAC;QAClB,UAAK,GAAS,IAAI,CAAC;QAC3B,aAAQ,GAA6B,IAAI,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzE,SAAI,GAA0B,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9D,sBAAiB,GAA6B,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;KAEzB;;;;IAEhD,cAAc;QACV,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG;;;;QAAC,CAAC,SAAe;YACpD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,WAAW,GAAG,OAAO,CAAC,CAAC;YACxF,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YACvB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS;gBACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC1B,OAAO,SAAS,CAAC;SAClB,EAAC,EACA,UAAU;;;;QAAC,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,EACnD,CAAC,CAAC;KACN;;;;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;KACvB;;;;;IAED,gBAAgB,CAAC,IAAa;QAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnC;;;;;IAED,oBAAoB,CAAC,IAA2C;QAC9D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;;;;;IAED,kBAAkB,CAAC,IAA6B;QAC9C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;;;YA1CF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAPQ,eAAe;;;;;;;;IAUtB,+CAA0B;;;;;IAC1B,2CAA2B;;IAC3B,8CAAyE;;IACzE,0CAA8D;;IAC9D,uDAAyE;;;;;IAE7D,4CAA+B;;;;;;;;MCAhC,4BAA4B;;;;;IAIvC,YACS,SAAqC,EACpC,GAAsB;QADvB,cAAS,GAAT,SAAS,CAA4B;QACpC,QAAG,GAAH,GAAG,CAAmB;QAJzB,aAAQ,GAAG,KAAK,CAAC;QACjB,qBAAgB,GAAG,KAAK,CAAC;QAK5B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,SAAS;;;;QAAC,IAAI;YAC5C,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;SACF,EAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS;;;;QAAC,IAAI;YAC7C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAA;YAC5B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACzB,EAAC,CAAC;KAEN;;;YApCF,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE;;;;;;GAMT;gBAID,aAAa,EAAE,iBAAiB,CAAC,IAAI;;aACtC;;;;YAfQ,0BAA0B;YADmD,iBAAiB;;;+BAmBpG,SAAS,SAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;IAA/C,wDAAoF;;IACpF,gDAAwB;;IACxB,wDAAgC;;IAE9B,iDAA4C;;;;;IAC5C,2CAA8B;;;;;;;;MCXrB,kBAAkB;;;;;;;IAQ3B,YACY,wBAAkD,EAClD,aAA+B,EAC/B,GAAsB,EACtB,IAAgC;QAHhC,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,kBAAa,GAAb,aAAa,CAAkB;QAC/B,QAAG,GAAH,GAAG,CAAmB;QACtB,SAAI,GAAJ,IAAI,CAA4B;QATV,4BAAuB,GAAY,OAAO,CAAC;QAChD,sBAAiB,GAAG,IAAI,YAAY,EAA2B,CAAC;QACxE,cAAS,GAAG,IAAI,YAAY,EAAkB,CAAC;QAShE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS;;;;QAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAAC,CAAC;QACpG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS;;;;QAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,CAAC;KACzE;;;;IAED,eAAe;QACX,IAAI,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,KAAK,OAAO;YAC/G,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC;KACxE;;;;IAED,QAAQ;;cACE,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,4BAA4B,CAAC;;cACtG,YAAY,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QACzE,IAAI,CAAC,qBAAqB,GAAG,YAAY,CAAC,QAAQ,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;QACnF,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;KAC3B;;;;IAED,MAAM;QACF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;KACtB;;;YAtCJ,SAAS,SAAC;gBACP,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE,WAAW;aACxB;;;;YAVc,wBAAwB;YAAE,gBAAgB;YAAE,iBAAiB;YAFnE,0BAA0B;;;wBAc9B,KAAK,SAAC,WAAW;yBACjB,KAAK,SAAC,YAAY;sCAClB,KAAK,SAAC,yBAAyB;gCAC/B,MAAM,SAAC,mBAAmB;wBAC1B,MAAM,SAAC,WAAW;;;;IAJnB,uCAAuC;;IACvC,wCAAyC;;IACzC,qDAA6E;;IAC7E,+CAA6F;;IAC7F,uCAAoE;;;;;IACpE,mDAA4D;;;;;IAGxD,sDAA0D;;;;;IAC1D,2CAAuC;;;;;IACvC,iCAA8B;;;;;IAC9B,kCAAwC;;;;;;;;MCnBnC,qBAAqB;;;;;IAUhC,OAAO,uBAAuB,CAAC,aAAqC;QAClE,IAAI,aAAa,CAAC,kBAAkB,EAAE;YACpC,qBAAqB,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAACA,QAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;SACrH;QACD,IAAI,aAAa,CAAC,oBAAoB,EAAE;YACtC,qBAAqB,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAAC;gBAC1D,MAAM,EAAE;oBACN,gBAAgB;oBAChB,OAAO;oBACP,YAAY;oBACZ,cAAc;iBACf;gBACD,gBAAgB,EAAE;oBAChB,SAAS,EAAE,gBAAgB;iBAC5B;gBACD,QAAQ,EAAEA,QAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,WAAW;aACjE,CAAC,CAAC;SACL;QACF,IAAI,aAAa,CAAC,iBAAiB,EAAE;YACnC,qBAAqB,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAAC;gBAC5D,kBAAkB,EAAE,IAAI;gBACxB,QAAQ,EAAEA,QAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW;aAC9D,CAAC,CAAC;SACJ;QACD,IAAI,aAAa,CAAC,mBAAmB,EAAE;YACrC,qBAAqB,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAACA,QAAgB,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;SACrH;QACF,IAAI,aAAa,CAAC,kBAAkB,EAAE;YACpC,qBAAqB,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAACA,QAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;SACpH;QACF,IAAI,aAAa,CAAC,iBAAiB,EAAE;YACnC,qBAAqB,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAACA,QAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;SACnH;QACF,IAAI,aAAa,CAAC,qBAAqB,EAAE;YACvC,qBAAqB,CAAC,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAACC,IAAe,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;SACjH;QACF,OAAO,qBAAqB,CAAC,oBAAoB,CAAC;KACnD;;AA7CM,0CAAoB,GAA2B;IACpD,UAAU,EAAE,OAAO;IACnB,aAAa,EAAE,EAAE;;;IAGjB,gBAAgB,EAAEA,IAAe,CAAC,gBAAgB,CAAC,IAAI;CACxD,CAAC;;YATH,UAAU;;;;IAGT,2CAME;;;;;;;;;MCHS,kBAAkB,GAAG,IAAI,cAAc,CAAgB,cAAc;MAgBrE,yBAAyB;;;;;;IAC7B,OAAO,OAAO,CAAC,cAA6B,EAAE,aAAqC;;cAClF,oBAAoB,GAAG,qBAAqB,CAAC,uBAAuB,CAAC,aAAa,CAAC;QACzF,OAAO;YACL,QAAQ,EAAE,yBAAyB;YACnC,SAAS,EAAE;gBACT,qBAAqB;gBACrB,iBAAiB,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,SAAS;gBACzD,EAAC,OAAO,EAAE,kBAAkB,EAAE,QAAQ,EAAE,cAAc,EAAC;gBACvD,gBAAgB,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,SAAS;aACzD;SACF,CAAC;KACH;;;YAzBF,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,kBAAkB,EAAE,4BAA4B,CAAC;gBAChE,OAAO,EAAE;oBACP,aAAa;oBACb,WAAW;oBACX,qBAAqB;oBACrB,gBAAgB;iBACjB;gBACD,OAAO,EAAE,CAAC,kBAAkB,EAAE,4BAA4B,CAAC;gBAC3D,SAAS,EAAE,CAAC,qBAAqB,CAAC;gBAClC,eAAe,EAAE,CAAC,4BAA4B,CAAC;aAChD;;;;;;;;;;;;;;;;;"}